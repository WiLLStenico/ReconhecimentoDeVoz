/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FramePrincipal.java
 *
 * Created on 13/07/2010, 21:21:54
 */
package javaapplication6;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author WiLL
 */
public class FramePrincipal extends JFrame {

    CapturaAudio ClassCapture = new CapturaAudio();
    byte ArrayAudio[];
    ChartPanel GRAmostra = new ChartPanel(null, false);
    ChartPanel GRAmostraPadrao = new ChartPanel(null, false);
    Daubechies ClassDaubechies = new Daubechies();
    Daubechies ClasseDaubechies = new Daubechies();
    int nroVezes = 0; //Apagar

    /** Creates new form FramePrincipal */
    public FramePrincipal() {
        initComponents();
        setTitle("WiLLiaM H. Stenico & Leandro M. Vitti");
        setLocationRelativeTo(null);
        BtnRecord.setEnabled(true);
        BtnStop.setEnabled(false);
        BtnPlay.setEnabled(false);
        ClassGrafico = new CriaGrafico();
        for (int i = 1; i <= 5; i++) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnRecord = new javax.swing.JButton();
        BtnStop = new javax.swing.JButton();
        BtnPlay = new javax.swing.JButton();
        BtnWav = new javax.swing.JButton();
        TxtArquivo = new javax.swing.JTextField();
        LabelArquivo = new javax.swing.JLabel();
        CheckBoxArq = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        lblMnuCorrelacao = new javax.swing.JLabel();
        tfCorrelacao = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WiLL");
        setResizable(false);

        BtnRecord.setText("RECORD");
        BtnRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRecordActionPerformed(evt);
            }
        });

        BtnStop.setText("STOP");
        BtnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnStopActionPerformed(evt);
            }
        });

        BtnPlay.setText("PLAY");
        BtnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPlayActionPerformed(evt);
            }
        });

        BtnWav.setText("WAV");
        BtnWav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnWavActionPerformed(evt);
            }
        });

        LabelArquivo.setText("Caminho do Arquivo:");

        CheckBoxArq.setText("Gravar Wavelet em Arq.");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(780, 70));

        lblMnuCorrelacao.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblMnuCorrelacao.setText("Correlação (%):");

        tfCorrelacao.setEditable(false);
        tfCorrelacao.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblMnuCorrelacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfCorrelacao))
                .addGap(577, 577, 577)
                .addComponent(btnReset)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblMnuCorrelacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCorrelacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CheckBoxArq)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TxtArquivo, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BtnWav, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnRecord, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnStop, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(BtnPlay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelArquivo, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(619, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnWav, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(LabelArquivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckBoxArq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRecordActionPerformed
        // TODO add your handling code here:

        getContentPane().remove(GRAmostra);
        getContentPane().remove(GRAmostraPadrao);
        getContentPane().repaint();

        ClassCapture.captureAudio();
        BtnRecord.setEnabled(false);
        BtnStop.setEnabled(true);
        BtnPlay.setEnabled(false);
    }//GEN-LAST:event_BtnRecordActionPerformed

    private void BtnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnStopActionPerformed
        // TODO add your handling code here:
        ArrayAudio = ClassCapture.stopCapture();

        //-------------Habilita Botões--------------
        BtnRecord.setEnabled(true);
        BtnStop.setEnabled(false);
        BtnPlay.setEnabled(true);
        //------------------------------------------

        ClassConverteAmostra = new ConverteAmostra();
        AmostraConvertida = ClassConverteAmostra.ConverteAmostraParaFloat(ArrayAudio.clone());

        try {
            ChamaWavelet();
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_BtnStopActionPerformed

    private void BtnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPlayActionPerformed
        // TODO add your handling code here:
        ClassCapture.playAudio(ArrayAudio);
        BtnRecord.setEnabled(true);
        BtnStop.setEnabled(false);
        BtnPlay.setEnabled(true);
    }//GEN-LAST:event_BtnPlayActionPerformed

    private void BtnWavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnWavActionPerformed
        // TODO add your handling code here:
        //------------------- Limpa Graficos Anteriores -------------------
        getContentPane().remove(GRAmostra);
        getContentPane().remove(GRAmostraPadrao);
        getContentPane().repaint();
        //-----------------------------------------------------------------

        String arq = TxtArquivo.getText();
        float maxValue = 0.0f;
        ImportaWav classImportaWav = new ImportaWav(arq);
        AmostraConvertida = classImportaWav.samplesw;

        try {
            ChamaWavelet();
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnWavActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        getContentPane().remove(GRAmostra);
        getContentPane().remove(GRAmostraPadrao);
        getContentPane().repaint();
        tfCorrelacao.setText(null);
        nroVezes = 0;
        try {
            for (int i = 1; i <= 5; i++) {
                UtilsArquivos.delete(i + ".txt"); //Exclui arquivos
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void ChamaWavelet() throws IOException {
        //Método responsável por criar graficos, calcular wavelet e gerar gráfico wavelet

        if (nroVezes != 0) {
            //----------Cria grafico de Amostras------------------------
            ClassGrafico.setStrTitulo("Amostra");
            GRAmostra = ClassGrafico.getGrafico(AmostraConvertida);
            GRAmostra.setSize(550, 250); //X,Y
            GRAmostra.setLocation(200, 2);
            getContentPane().add(GRAmostra);
            GRAmostra.repaint();
            //-----------------------------------------------------------

            //----------------Filtragem da Amostra-----------------------
            if (CheckBoxArq.isSelected()) {
                UtilsArquivos.salvar("Amostra.txt", "", false); //Zera arquivo antes de gravar               
                for (int i = 0; i < AmostraConvertida.length; i++) {
                    UtilsArquivos.salvar("Amostra.txt", Float.toString(AmostraConvertida[i]), true);
                    UtilsArquivos.salvar("Amostra.txt", ";\n", true);
                    //System.out.println("Stringada: " + Float.toString(AmostraConvertida[i]) + "Normal: " + AmostraConvertida[i]);
                }
            }
            //-----------------------------------------------------------
            //----------WAVELET ----------------------
            // Daubechies
            ClassDaubechies.transformada_daubechies_1(AmostraConvertida);

            System.out.println("Tamanho da Amostra: " + AmostraConvertida.length);
            System.out.println("Nivel Final: " + ClassDaubechies.getNivel());

            if (CheckBoxArq.isSelected()) {
                UtilsArquivos.salvar("Wavelet.txt", "", false); //Zera arquivo antes de gravar
                for (int i = 0; i < AmostraConvertida.length; i++) {
                    UtilsArquivos.salvar("Wavelet.txt", Float.toString(AmostraConvertida[i]), true);
                    UtilsArquivos.salvar("Wavelet.txt", ";\n", true);
                }
            }
            //----------------------------------------
            //-----------------------Calcula Convolucão-------------------
            float resultadoConvolucao = 0;
            Correlacao correlacao = new Correlacao();

            //float[] teste1 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; //APAGAR
            //float[] teste2 = {1, 2, 3, 4, 5, 6, 13, 8, 9, 10}; //APAGAR
            System.out.println("TAMANHOS ANTES: " + AmostraConvertida.length + " " + AmostraPadraoConvertida.length);

            if (AmostraConvertida.length > AmostraPadraoConvertida.length) {
                int dif;
                float[] aux;
                dif = AmostraConvertida.length - AmostraPadraoConvertida.length;
                aux = AmostraPadraoConvertida.clone();
                AmostraPadraoConvertida = new float[AmostraConvertida.length];

                for (int i = 0; i < AmostraConvertida.length - dif; i++) {
                    AmostraPadraoConvertida[i] = aux[i];
                }

                for (int i = AmostraConvertida.length - dif + 1; i < AmostraConvertida.length; i++) {
                    AmostraPadraoConvertida[i] = 0;

                }

            } else if (AmostraConvertida.length < AmostraPadraoConvertida.length) {
                int dif;
                float[] aux;
                dif = AmostraPadraoConvertida.length - AmostraConvertida.length;
                aux = AmostraConvertida.clone();
                AmostraConvertida = new float[AmostraPadraoConvertida.length];

                for (int i = 0; i < AmostraPadraoConvertida.length - dif; i++) {
                    AmostraConvertida[i] = aux[i];
                }

                for (int i = AmostraPadraoConvertida.length - dif + 1; i < AmostraPadraoConvertida.length; i++) {
                    AmostraConvertida[i] = 0;

                }
            }
            System.out.println("TAMANHOS ANTES: " + AmostraConvertida.length + " " + AmostraPadraoConvertida.length);



            //----------WAVELET ----------------------
            // Daubechies

            int cont = AmostraConvertida.length;
            int count = 0;
            for (int i = cont; i > 2; i = i / 2) {
                count++;
            }
            for (int i = 0; i < count; i++) {

                ClassDaubechies.setNivel(1);
                ClasseDaubechies.setNivel(1);
                ClassDaubechies.transformada_daubechies_1(AmostraConvertida);
                ClasseDaubechies.transformada_daubechies_1(AmostraPadraoConvertida);
                resultadoConvolucao = correlacao.calculaCorrelacao(AmostraConvertida, AmostraPadraoConvertida);
                System.out.println("CORRE: " + resultadoConvolucao);
            }

            //tfCorrelacao.setText(String.valueOf(resultadoConvolucao));

            System.out.println("Tamanho da Amostra: " + AmostraConvertida.length);
            System.out.println("Nivel Final: " + ClassDaubechies.getNivel());

            //=========================INTEPORLACAO===================
            if (AmostraConvertida.length > AmostraPadraoConvertida.length) {
                float[] aux;
                aux = AmostraConvertida;
                AmostraConvertida = new float[AmostraPadraoConvertida.length];
                System.arraycopy(aux, 0, AmostraPadraoConvertida, 0, AmostraConvertida.length);
            } else if (AmostraConvertida.length < AmostraPadraoConvertida.length) {
                float[] aux;
                aux = AmostraPadraoConvertida;
                AmostraPadraoConvertida = new float[AmostraConvertida.length];
                System.arraycopy(aux, 0, AmostraConvertida, 0, AmostraPadraoConvertida.length);
            }
            //========================================================      

            System.out.println("TAMANHOS: " + AmostraConvertida.length + " " + AmostraPadraoConvertida.length);
            resultadoConvolucao = correlacao.calculaCorrelacao(AmostraConvertida, AmostraPadraoConvertida);

            tfCorrelacao.setText(String.valueOf(resultadoConvolucao * 100));

            //System.out.println("Correlacao: " + resultadoConvolucao * 100);
            //------------------------------------------------------------
            //---------------Cria grafico da Wavelet----------------------
            ClassGrafico.setStrTitulo("Amostra Padrão");
            //GRAmostraPadrao = ClassGrafico.getGrafico(AmostraConvertida);
            GRAmostraPadrao = ClassGrafico.getGrafico(AmostraPadraoConvertida);
            GRAmostraPadrao.setSize(550, 249); //X,Y
            GRAmostraPadrao.setLocation(200, 251);
            getContentPane().add(GRAmostraPadrao);
            GRAmostraPadrao.repaint();
            //-------------------------------------------------------------
            nroVezes++;
        } else {
            AmostraPadraoConvertida = AmostraConvertida;
            System.out.println("Criada Amostra Padrão");
            nroVezes++;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FramePrincipal().setVisible(true);

            }
        });
    }
    private CriaGrafico ClassGrafico;
    private ConverteAmostra ClassConverteAmostra;
    private float[] AmostraPadraoConvertida;
    private float[] AmostraConvertida;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPlay;
    private javax.swing.JButton BtnRecord;
    private javax.swing.JButton BtnStop;
    private javax.swing.JButton BtnWav;
    private javax.swing.JCheckBox CheckBoxArq;
    private javax.swing.JLabel LabelArquivo;
    private javax.swing.JTextField TxtArquivo;
    private javax.swing.JButton btnReset;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMnuCorrelacao;
    private javax.swing.JTextField tfCorrelacao;
    // End of variables declaration//GEN-END:variables
}
