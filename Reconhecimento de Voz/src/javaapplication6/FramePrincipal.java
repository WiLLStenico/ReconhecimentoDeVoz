/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FramePrincipal.java
 *
 * Created on 13/07/2010, 21:21:54
 */
package javaapplication6;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author WiLL
 */
public class FramePrincipal extends JFrame {

    CapturaAudio ClassCapture = new CapturaAudio();
    byte ArrayAudio[];
    ChartPanel GRAmostra = new ChartPanel(null, false);
    ChartPanel GRAmostraPadrao = new ChartPanel(null, false);
    Daubechies ClassDaubechies = new Daubechies();
    Daubechies ClasseDaubechies = new Daubechies();
    int nroVezes = 0;//ATRIBUIR ZEROOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO //Numero de Vezes
    int nroAm = 0; //Numero do Comando

    /** Creates new form FramePrincipal */
    public FramePrincipal() {
        initComponents();
        setTitle("WiLLiaM H. Stenico & Leandro M. Vitti");
        setLocationRelativeTo(null);
        BtnRecord.setEnabled(true);
        BtnStop.setEnabled(false);
        BtnPlay.setEnabled(false);
        btnGrafEnergia.setEnabled(false);
        btnMediasEnerg.setEnabled(false);
        //tfLegenda.setVisible(false);
        ClassGrafico = new CriaGrafico();
        KeyListener kl = new KeyListener() {

            public void keyTyped(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet.");
            }

            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_CONTROL) {
                    Record();
                }
                throw new UnsupportedOperationException("Not supported yet.");
            }

            public void keyReleased(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        };
        addKeyListener(kl);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnRecord = new javax.swing.JButton();
        BtnStop = new javax.swing.JButton();
        BtnPlay = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblNroSilabas = new javax.swing.JLabel();
        tfNroSilabas = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        tfMedCorrelacao = new javax.swing.JTextField();
        lblMedCorrelacao = new javax.swing.JLabel();
        tfComando = new javax.swing.JTextField();
        btnRegravaComando = new javax.swing.JButton();
        tfLegenda = new javax.swing.JTextField();
        btnGrafEnergia = new javax.swing.JButton();
        btnMediasEnerg = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WiLL");
        setResizable(false);

        BtnRecord.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BtnRecord.setText("RECORD");
        BtnRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRecordActionPerformed(evt);
            }
        });
        BtnRecord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRecordKeyPressed(evt);
            }
        });

        BtnStop.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BtnStop.setText("STOP");
        BtnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnStopActionPerformed(evt);
            }
        });
        BtnStop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BtnStopKeyReleased(evt);
            }
        });

        BtnPlay.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BtnPlay.setText("PLAY");
        BtnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPlayActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(780, 70));

        lblNroSilabas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNroSilabas.setText("Nro. Silabas:");

        tfNroSilabas.setEditable(false);
        tfNroSilabas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tfMedCorrelacao.setBackground(new java.awt.Color(240, 240, 240));
        tfMedCorrelacao.setEditable(false);
        tfMedCorrelacao.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        lblMedCorrelacao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMedCorrelacao.setText("Med. Correlação(%):");

        tfComando.setEditable(false);
        tfComando.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        tfComando.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfComando.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnRegravaComando.setText("REGRAVA");
        btnRegravaComando.setToolTipText("Ignora gravação feita");
        btnRegravaComando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegravaComandoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblNroSilabas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfNroSilabas))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfMedCorrelacao)
                    .addComponent(lblMedCorrelacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfComando, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegravaComando)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegravaComando, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNroSilabas)
                            .addComponent(lblMedCorrelacao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNroSilabas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfMedCorrelacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tfComando, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
        );

        tfLegenda.setBackground(new java.awt.Color(240, 240, 240));
        tfLegenda.setEditable(false);
        tfLegenda.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tfLegenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfLegenda.setBorder(null);
        tfLegenda.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnGrafEnergia.setText("Gráfico Energia");
        btnGrafEnergia.setToolTipText("Gera gráfico de energia da amostra de entrada");
        btnGrafEnergia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrafEnergiaActionPerformed(evt);
            }
        });

        btnMediasEnerg.setText("Gráf. Medias Energetica");
        btnMediasEnerg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMediasEnergActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnMediasEnerg, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(btnGrafEnergia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnRecord, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnStop, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(BtnPlay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(tfLegenda, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(tfLegenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGrafEnergia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMediasEnerg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRecordActionPerformed
        // TODO add your handling code here:
        Record();
    }//GEN-LAST:event_BtnRecordActionPerformed

    private void BtnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnStopActionPerformed
        // TODO add your handling code here:
        Stop();
    }//GEN-LAST:event_BtnStopActionPerformed

    private void BtnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPlayActionPerformed
        // TODO add your handling code here:
        ClassCapture.playAudio(ArrayAudio);
        BtnRecord.setEnabled(true);
        BtnStop.setEnabled(false);
        BtnPlay.setEnabled(true);
    }//GEN-LAST:event_BtnPlayActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        getContentPane().remove(GRAmostra);
        getContentPane().remove(GRAmostraPadrao);
        getContentPane().repaint();
        tfNroSilabas.setText(null);
        tfMedCorrelacao.setText(null);
        tfComando.setText(null);
        btnGrafEnergia.setEnabled(false);
        btnMediasEnerg.setEnabled(false);
        btnRegravaComando.setVisible(true);
        nroVezes = 0;
        nroAm = 0;
}//GEN-LAST:event_btnResetActionPerformed

    private void BtnRecordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRecordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_CONTROL) {
            Record();
        }
    }//GEN-LAST:event_BtnRecordKeyPressed

    private void BtnStopKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnStopKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_CONTROL) {
            Stop();
        }
    }//GEN-LAST:event_BtnStopKeyReleased

    private void btnGrafEnergiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrafEnergiaActionPerformed
        // TODO add your handling code here:
        int iAmstrMedMov = 2048;
        float[] copiaAmostra = AmostraConvertida.clone();
        float[] arrayAux = new float[iAmstrMedMov];
        float[] arrayMediasMedias = new float[copiaAmostra.length];
        float fUltimaMedia = 0;
        float fMediaAtual = 0;
        float fMaiorMediaMovel = 0;
        int iQtdeSilabas = 0;
        int iContMediasAbaixo = 0;
        boolean bEmSilaba = false;

        getContentPane().remove(GRAmostraPadrao);

        ClassGrafico.setStrTitulo("Energia da Amostra");
        ClassGrafico.setsLegX("Tempo");
        ClassGrafico.setsLegY("Energia");
        try {
            GRAmostraPadrao = ClassGrafico.getGrafico(CalculaEnergia(copiaAmostra));
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //fMediaTotal = CalculaMedia(copiaAmostra);
        //System.out.println("Media Total:: " + fMediaTotal);

        //--------------- Cria grafico da Energia da Amostra ----------------------
        GRAmostraPadrao.setSize(550, 249); //X,Y
        GRAmostraPadrao.setLocation(200, 251);
        getContentPane().add(GRAmostraPadrao);
        GRAmostraPadrao.repaint();
        //-------------------------------------------------------------
    }//GEN-LAST:event_btnGrafEnergiaActionPerformed

    private void btnMediasEnergActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMediasEnergActionPerformed
        // TODO add your handling code here:
        NroSilabas(AmostraConvertida.clone(), true);
    }//GEN-LAST:event_btnMediasEnergActionPerformed

    private void btnRegravaComandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegravaComandoActionPerformed
        // TODO add your handling code here:
        nroVezes--;
        nroAm--;
        getContentPane().remove(GRAmostra);
        getContentPane().remove(GRAmostraPadrao);
        getContentPane().repaint();
    }//GEN-LAST:event_btnRegravaComandoActionPerformed

    private int NroSilabas(float[] array, boolean bPrintaGraf) {
        int iAmstrMedMov = 1000;
        //float[] array = AmostraConvertida.clone();
        float[] arrayAux = new float[iAmstrMedMov];
        float[] arrayMediasMedias = new float[array.length];
        int iQtdeSilabas = 0;

        //System.out.println("TAMANHO AMOSTRA:: " + array.length);

        for (int i = 0; i < array.length; i++) {
            if (array[i] <= 0.2) {
                array[i] = 0;
            }
        }

        for (int i = 0; i < array.length; i++) {
            int j = iAmstrMedMov;

            if (i + iAmstrMedMov >= array.length) {
                j = array.length - i;
            }

            for (int w = 0; w < j; w++) {
                arrayAux[w] = array[i + w];
            }

            arrayMediasMedias[i] = CalculaMedia(CalculaEnergia(arrayAux.clone()));

        }

        boolean bValidaSil = true;

        ClassConverteAmostra.NormalizaAmostra(arrayMediasMedias);

        for (int i = 0; i < arrayMediasMedias.length; i++) {
            if ((arrayMediasMedias[i] <= 0.1) && (bValidaSil == false)) {
                //System.out.println("Media de MIL(i = " + i + " ):: " + fMedia);
                //System.out.println("ArrayMedia(i= " + i + ":: " + arrayMediasMedias[i]);
                iQtdeSilabas++;
                i = i + 1000;

                bValidaSil = true;
            } else if (arrayMediasMedias[i] >= 0.15) {
                bValidaSil = false;
            }
        }

//        System.out.println("Nro Silabas:: " + iQtdeSilabas);

        //--------------- Cria grafico da Energia da Amostra ----------------------
        if (bPrintaGraf) {
            getContentPane().remove(GRAmostraPadrao);
            ClassGrafico.setStrTitulo("Energia da Amostra");
            ClassGrafico.setsLegX("Tempo");
            ClassGrafico.setsLegY("Energia");
            try {
                GRAmostraPadrao = ClassGrafico.getGrafico(arrayMediasMedias);
            } catch (IOException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            GRAmostraPadrao.setSize(550, 249); //X,Y
            GRAmostraPadrao.setLocation(200, 251);
            getContentPane().add(GRAmostraPadrao);
            GRAmostraPadrao.repaint();
            //-------------------------------------------------------------
        }
        return iQtdeSilabas;
    }

    private float[] CalculaEnergia(float[] array) {

        for (int w = 0; w < array.length; w++) {
            array[w] = (float) Math.pow(array[w], 2);
        }
        return array;
    }

    private void Record() {

        getContentPane().remove(GRAmostra);
        getContentPane().remove(GRAmostraPadrao);
        getContentPane().repaint();
        tfNroSilabas.setText(null);
        tfMedCorrelacao.setText(null);
        tfComando.setText(null);



        if (nroVezes < 5) {
            tfLegenda.setEnabled(true);
            tfLegenda.setVisible(true);


            if (nroVezes == 0) {
                tfLegenda.setText("Diga: \"DIREITA\"");


            } else if (nroVezes == 1) {
                tfLegenda.setText("Diga: \"ESQUERDA\"");


            } else if (nroVezes == 2) {
                tfLegenda.setText("Diga: \"FRENTE\"");


            } else if (nroVezes == 3) {
                tfLegenda.setText("Diga: \"TRÁS\"");


            } else if (nroVezes == 4) {
                tfLegenda.setText("Diga: \"PARAR\"");


            }
        } else {
            tfLegenda.setEnabled(false);
            tfLegenda.setVisible(false);


        }

        ClassCapture.captureAudio();
        BtnRecord.setEnabled(false);
        BtnStop.setEnabled(true);
        BtnPlay.setEnabled(false);
        btnGrafEnergia.setEnabled(false);
        btnMediasEnerg.setEnabled(false);
        BtnStop.requestFocusInWindow();


    }

    private void Stop() {
        ArrayAudio = ClassCapture.stopCapture();

        ClassConverteAmostra = new ConverteAmostra();
        AmostraConvertida = ClassConverteAmostra.ConverteAmostraParaFloat(ArrayAudio.clone());

        try {
            ExecutaProcessamento();
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //-------------Habilita Botões--------------
        BtnRecord.setEnabled(true);
        BtnStop.setEnabled(false);
        BtnPlay.setEnabled(true);
        btnGrafEnergia.setEnabled(true);
        btnMediasEnerg.setEnabled(true);
        BtnRecord.requestFocusInWindow();
        //------------Legenda-----------------------
        tfLegenda.setEnabled(false);
        tfLegenda.setVisible(false);
        //------------------------------------------

    }

    public float CalculaMedia(float[] flArray) {
        float media = 0.000000f, soma = 0.000000f;

        for (int i = 0; i
                < flArray.length; i++) { //Soma valores
            soma = soma + flArray[i];
        }

        media = soma / flArray.length;

        for (int i = 0; i
                < flArray.length; i++) { //Zera Media do Array
            flArray[i] = flArray[i] - media;

        }

        return media;

    }

    private float[] IsolaSilaba(float[] array, int iNroDaSil) {
        int iAmstrMedMov = 1000;
        float[] arrayCl = array.clone();
        float[] arrayAux = new float[iAmstrMedMov];
        float[] arrayMediasMedias = new float[array.length];
        int iInicioSil = 0, iFimSil = 0;
        int iQtdeSilabas = 0;

        //System.out.println("TAMANHO AMOSTRA:: " + array.length);

        for (int i = 0; i < array.length; i++) {
            if (Math.abs(array[i]) <= 0.2) {
                array[i] = 0;
            }
        }

        for (int i = 0; i < array.length; i++) {
            int j = iAmstrMedMov;

            if (i + iAmstrMedMov >= array.length) {
                j = array.length - i;
            }

            for (int w = 0; w < j; w++) {
                arrayAux[w] = array[i + w];
            }

            arrayMediasMedias[i] = CalculaMedia(CalculaEnergia(arrayAux.clone()));

        }

        boolean bValidaSil = true;

        ClassConverteAmostra.NormalizaAmostra(arrayMediasMedias);

        for (int i = 0; i < arrayMediasMedias.length && iQtdeSilabas <= iNroDaSil; i++) {

            if ((arrayMediasMedias[i] <= 0.1) && (bValidaSil == false)) {

                //System.out.println("Media de MIL(i = " + i + " ):: " + fMedia);
                //System.out.println("ArrayMedia(i= " + i + ":: " + arrayMediasMedias[i]);

                iQtdeSilabas++;

                iInicioSil = iFimSil;

                iFimSil = i;

                //System.out.println("INICIO:: " + iInicioSil + " FIM::" + iFimSil);

                i = i + 1000;

                bValidaSil = true;
            } else if (arrayMediasMedias[i] >= 0.15) {
                bValidaSil = false;
            }
        }

        //float[] fArraySil = new float[iFimSil - iInicioSil];
        float[] fArrayVogal = new float[1024];
        int iIMax = 0;
        //if (iQtdeSilabas == iNroDaSil + 1) {

        //System.out.println("TAMANHO:: "+ array.length);

        for (int i = iInicioSil; i < iFimSil; i++) {
            //fArraySil[i] = array[i + (iFimSil - iInicioSil - 1)];
            if (arrayCl[i] > arrayCl[iIMax]) {
                iIMax = i;
            }
            //System.out.println("I:: " + i + " POS:: " + (i + (iFimSil - iInicioSil)));
        }

        //System.out.println("INICIO DA VOGAL:: " + iIMax);
        for (int i = 0; i < 1024; i++) {
            if (i + iIMax < arrayCl.length) {
                fArrayVogal[i] = arrayCl[i + iIMax];
            } else {
                fArrayVogal[i] = 0;
            }

            //System.out.println("ARRAY VOGAL:: " + fArrayVogal[i]);
        }

        ClassConverteAmostra.NormalizaAmostra(fArrayVogal);
        //}

//        System.out.println("Nro Silabas:: " + iQtdeSilabas);

        return fArrayVogal;
    }

    private void ExecutaProcessamento() throws IOException {
        //Método responsável por criar graficos, calcular wavelet e gerar gráfico wavelet
        int iComando = 6;
        int iNroSilabas = NroSilabas(AmostraConvertida.clone(), false);
        String log;
        //System.out.println("===============================================\n===============================================");

        tfNroSilabas.setText(String.valueOf(iNroSilabas));



        //float[] apagueisso = IsolaSilaba(AmostraConvertida.clone(), 2);

        if (nroVezes >= 5) {

            log = "==============================================="
                    + System.getProperty("line.separator") + "            Nova Palavra"
                    + System.getProperty("line.separator") + "==============================================="
                    + System.getProperty("line.separator") + System.getProperty("line.separator");




            btnRegravaComando.setVisible(false);

            float fMaiorMediaCorrelacao = 0;

//!!!!!!!!!!!!!!!!!!!!!!!!!!! VOLTE ESSA PARTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

            for (nroAm = 0; nroAm < 5; nroAm++) {

                if (iNroSilabas == iNrodeSilabasPadrao[nroAm]) {

                    log = log + System.getProperty("line.separator") + System.getProperty("line.separator");

                    if (nroAm == 0) {
                        log = log + "AMOSTRA X DIREITA" + System.getProperty("line.separator");

                    } else if (nroAm == 1) {
                        log = log + "AMOSTRA X ESQUERDA" + System.getProperty("line.separator");

                    } else if (nroAm == 2) {
                        log = log + "AMOSTRA X FRENTE" + System.getProperty("line.separator");

                    } else if (nroAm == 3) {
                        log = log + "AMOSTRA X TRÁS" + System.getProperty("line.separator");

                    } else if (nroAm == 4) {
                        log = log + "AMOSTRA X PARAR" + System.getProperty("line.separator");

                    } else if (nroAm == 6) {
                        log = log + "AMOSTRA X INVÁLIDO" + System.getProperty("line.separator");

                    }

                    log = log + "------------------------------------------------" + System.getProperty("line.separator");

                    //-----------------------Calcula Convolucão-------------------
                    float fResultadoCorrelacao = 0;
                    float fCorrelacaoPalavraInteira = 0;
                    Correlacao correlacao = new Correlacao();

                    //=======================CORRELAÇÃO=============================
                    int i;
                    //NIVEL SEMPRE VAI ATE 10 pois ESPACOS DE AMOSTRAGEM SAO DE 1024 em 1024                    
                    for (int iSilabaAtual = 0; iSilabaAtual < iNroSilabas; iSilabaAtual++) {

                        //              System.out.println("SILABA:: " + (iSilabaAtual + 1));
                        log = log + "SILABA:: " + (iSilabaAtual + 1) + System.getProperty("line.separator") + System.getProperty("line.separator");
                        float[] fSilabaAmostra = IsolaSilaba(AmostraConvertida.clone(), iSilabaAtual);
                        float[] fSilabaAmostraPadrao = IsolaSilaba(AmostraPadraoConvertida[nroAm].clone(), iSilabaAtual);
                        //            System.out.println("-----------------------------------------------------------");

                        fResultadoCorrelacao = correlacao.calculaCorrelacao(fSilabaAmostra, fSilabaAmostraPadrao);
                        fCorrelacaoPalavraInteira = fCorrelacaoPalavraInteira + fResultadoCorrelacao;

                        //          System.out.println("CORRE CRUA:: " + fResultadoCorrelacao);
                        log = log + "CORRELACAO SILABA CRUA:: " + fResultadoCorrelacao + System.getProperty("line.separator");

                        for (ClassDaubechies.setNivel(i = 1); ClassDaubechies.getNivel() < 10; ClassDaubechies.setNivel(i++)) {
                            ClassDaubechies.transformada_daubechies_1(fSilabaAmostra);
                            //for (ClasseDaubechies.setNivel(j = 1); ClasseDaubechies.getNivel() < 10; ClasseDaubechies.setNivel(j++)) {
                            ClasseDaubechies.transformada_daubechies_1(fSilabaAmostraPadrao);
                            fResultadoCorrelacao = correlacao.calculaCorrelacao(fSilabaAmostra, fSilabaAmostraPadrao);
                            fCorrelacaoPalavraInteira = fCorrelacaoPalavraInteira + fResultadoCorrelacao;
                            //System.out.println("CORRE WV nivel(" + i + "):: " + fResultadoCorrelacao);
                            log = log + "CORRE WV nivel(" + i + "):: " + fResultadoCorrelacao + System.getProperty("line.separator");
                        }

                    }
                    //System.out.println("CORRELACAO MEDIA DA PALAVRA:: " + (fMaiorMediaCorrelacao / 11 / iNroSilabas));
                    log = log + "CORRELACAO MEDIA DA PALAVRA:: " + (fCorrelacaoPalavraInteira / (11 * iNroSilabas)) + System.getProperty("line.separator");
                    if (fCorrelacaoPalavraInteira > fMaiorMediaCorrelacao) {
                        fMaiorMediaCorrelacao = fCorrelacaoPalavraInteira;
                        iComando = nroAm;
                    }

                    //==========================================================
                } //Fim do IF Nro Silabas

            }  //Fim do For nroAm

//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ATE AQUIIIIIIIIIII !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

            tfMedCorrelacao.setText(String.valueOf(fMaiorMediaCorrelacao / (11 * iNroSilabas)));

            log = log + "*********************************************************" + System.getProperty("line.separator");

            if (iComando == 0) {
                tfComando.setText("DIREITA");
                log = log + "PALAVRA RECONHECIDA = DIREITA" + System.getProperty("line.separator");

            } else if (iComando == 1) {
                tfComando.setText("ESQUERDA");
                log = log + "PALAVRA RECONHECIDA = ESQUERDA" + System.getProperty("line.separator");

            } else if (iComando == 2) {
                tfComando.setText("FRENTE");
                log = log + "PALAVRA RECONHECIDA = FRENTE" + System.getProperty("line.separator");

            } else if (iComando == 3) {
                tfComando.setText("TRÁS");
                log = log + "PALAVRA RECONHECIDA = TRAS" + System.getProperty("line.separator");

            } else if (iComando == 4) {
                tfComando.setText("PARAR");
                log = log + "PALAVRA RECONHECIDA = PARAR" + System.getProperty("line.separator");

            } else if (iComando == 6) {
                tfComando.setText("INVÁLIDO");
                log = log + "NENHUM COMANDO RECONHECIDO" + System.getProperty("line.separator");

            }

            log = log + "*********************************************************" + System.getProperty("line.separator") + System.getProperty("line.separator") + System.getProperty("line.separator");

            UtilsArquivos.salvar(System.getProperty("user.home")
                    + System.getProperty("file.separator")
                    + "Desktop" + System.getProperty("file.separator")
                    + "log.txt", log, true);

            //----------Cria grafico de Amostras------------------------
            ClassGrafico.setStrTitulo("Amostra " + tfComando.getText());
            ClassGrafico.setsLegX("Tempo");
            ClassGrafico.setsLegY("Amplitude");
            GRAmostra = ClassGrafico.getGrafico(AmostraConvertida);
            GRAmostra.setSize(550, 250); //X,Y
            GRAmostra.setLocation(200, 2);
            getContentPane().add(GRAmostra);
            GRAmostra.repaint();
            //-----------------------------------------------------------
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! VOLTARRRRRRRRRRRRRRRRRRRRRRRRR !!!!!!!!!!!!!!!!!!!!!!!!
            //---------------Cria grafico da Amostra Padrao----------------------
            if (iComando < 5) {
                ClassGrafico.setStrTitulo("Amostra Padrão " + tfComando.getText());
                ClassGrafico.setsLegX("Tempo");
                ClassGrafico.setsLegY("Amplitude");
                //GRAmostraPadrao = ClassGrafico.getGrafico(AmostraConvertida);
                GRAmostraPadrao = ClassGrafico.getGrafico(AmostraPadraoConvertida[iComando]);
                GRAmostraPadrao.setSize(550, 249); //X,Y
                GRAmostraPadrao.setLocation(200, 251);
                getContentPane().add(GRAmostraPadrao);
                GRAmostraPadrao.repaint();
            }
            //-------------------------------------------------------------
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! VOLTARR ATE AQUIIIIIIIIIIIIII!!!!!!!!!!!!!!!!!!!!!!!!

            nroVezes++;

        } else {
            AmostraPadraoConvertida[nroAm] = AmostraConvertida;
            iNrodeSilabasPadrao[nroAm] = iNroSilabas;
            //System.out.println("Criada Amostra Padrão");
            //System.out.println("AMOS:: " + AmostraPadraoConvertida[nroAm].length);

            float[] CopiaAmostra, CopiaAmostraPadrao;

            CopiaAmostraPadrao = AmostraPadraoConvertida[nroAm].clone();

            if (AmostraPadraoConvertida[nroAm].length > 0) {
                nroVezes++;
                nroAm++;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FramePrincipal().setVisible(true);


            }
        });


    }
    private CriaGrafico ClassGrafico;
    private ConverteAmostra ClassConverteAmostra;
    private float[][] AmostraPadraoConvertida = new float[5][];
    private float[] AmostraConvertida;
    private int[] iNrodeSilabasPadrao = new int[5];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPlay;
    private javax.swing.JButton BtnRecord;
    private javax.swing.JButton BtnStop;
    private javax.swing.JButton btnGrafEnergia;
    private javax.swing.JButton btnMediasEnerg;
    private javax.swing.JButton btnRegravaComando;
    private javax.swing.JButton btnReset;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMedCorrelacao;
    private javax.swing.JLabel lblNroSilabas;
    private javax.swing.JTextField tfComando;
    private javax.swing.JTextField tfLegenda;
    private javax.swing.JTextField tfMedCorrelacao;
    private javax.swing.JTextField tfNroSilabas;
    // End of variables declaration//GEN-END:variables
}
